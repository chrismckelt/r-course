p_load("utilities")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
predictor("best thing")
require(chartr)
using("chartr")
txt <- lowerCase(txt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/project_1__setup.r", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
str_get_words("asdf best thing", 3)
str_get_words("asdf best thing", 1)
str_get_last_word("best thing")
str_get_words("asdf best thing", 1)
str_get_words("asdf best thing", 1)
str_get_last_word("best thing")
str_get_words("asdf best thing", 2)
predictor("best thing")
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
#' Given a sentence get the last words str_get_words <- function(txt, total){     array <- stringi::stri_extract_all_words(txt)     negate <- (-1 * total)     if (total > length(array)) {         word(sentence, negate)     }     return(str_get_last_word(txt))     stop("str_get_words failed") }
str_get_last_word("best thing")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
str_get_words("asdf best thing", 2)
str_get_words("asdf best thing", 2)
library(stringr)
str_get_words("asdf best thing", 2)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
str_get_last_word("best thing")
str_get_words("asdf best thing", 2)
str_get_words("asdf best thing asdf ddd asdad ddd ", 2)
txt <- "asdf best thing asdf ddd asdad ddd "
word(txt, -2)
word(txt, -3)
txt <- c("asdf best thing asdf ddd asdad ddd ")
word(txt, -3)
paste(tail(strsplit(sentence, "\\s+")[[1]], 2), collapse = " ")
paste(tail(strsplit(txt, "\\s+")[[1]], 2), collapse = " ")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
str_get_words(txt,3)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
str_get_words(txt,3)
txt <- "asdf best thing asdf ddd asdad ddd "
str_get_words(txt,3)
paste(tail(strsplit(sentence, "\\s+")[[1]], 2), collapse = " ")
paste(tail(strsplit(txt, "\\s+")[[1]], 2), collapse = " ")
paste(tail(strsplit(txt, "\\s+")[[1]], 3), collapse = " ")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
str_get_words(txt,3)
str_get_words(txt,2)
str_get_words(txt,1)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/project_1__setup.r", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
predictor("best thing")
str_get_last_word("best thing")
txt <- "asdf best thing asdf ddd asdad ddd "
predictor("best thing")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
predictor("best thing")
text <- "asdf best thing asdf ddd asdad ddd "
if (is.na(text)) {         warning("text NA or empty")         stop()     }     if (length(trim(text)) == 0) {         warning("text NA or empty")         stop()     }     text <- clean_data_text(text)
if (length(trim(text)) == 0)  stop("no input text")
dt.search.result <- colnames(c("ngram", "word", "freq", "predicted"))
dt.search.terms = as.data.table(str_split(text, " "), stringsAsFactors = FALSE)
term_count <- nrow(dt.search.terms)
if (term_count == 0) return(NULL)
if (term_count >= 5) {             term_count <- 4     }
data_found <- TRUE
text
tail(stri_extract_all_words(txt)[[1]], 2)
tail(stri_extract_all_words(text)[[1]], 2)
text <- tail(stri_extract_all_words(text)[[1]], 3)
print(text)
result <- search_ngram(text, ng_id)
if (is_data_frame_valid(result)) {                 sql <- paste("select word, freq, word as predicted from result order by freq desc limit 3")                 df.row <- sqldf(sql)                 if (is_data_frame_valid(df.row)) {                     dt.search.result <- rbind(dt.search.result, data.frame(ngram = ng_id, word = df.row[1], freq = df.row[2], predicted = df.row[3]))                     if (!search_results_exist) {                         sqldf("create index idx_freq on [dt.search.result](freq)")                         sqldf("create index idx_word on [dt.search.result](word)")                         search_results_exist <- TRUE                     }                 }             }
}
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
text <- "asdf best thing asdf ddd asdad ddd "
if (is.na(text)) {         warning("text NA or empty")         stop()     }
if (length(trim(text)) == 0) {         warning("text NA or empty")         stop()     }
text <- clean_data_text(text)
if (length(trim(text)) == 0)  stop("no input text")
# flog.debug(paste("predictor --> text.cleaned =", text))
dt.search.result <- colnames(c("ngram", "word", "freq", "predicted"))
dt.search.terms = as.data.table(str_split(text, " "), stringsAsFactors = FALSE)
term_count <- nrow(dt.search.terms)
if (term_count == 0) return(NULL)
### tweak to optimise speed
if (term_count >= 5) {             term_count <- 4     }
search_results_exist <- FALSE
#search ngrams - cycle of word count and call function to search ngram table
data_found <- TRUE
rm(text)
text <- tail(stri_extract_all_words(text)[[1]], 3)
text <- "asdf best thing asdf ddd asdad ddd "
text <- tail(stri_extract_all_words(text)[[1]], 3)
text <- "asdf best thing asdf ddd asdad ddd "
text <- str_get_words(text,3)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
text <- "asdf best thing asdf ddd asdad ddd "
if (is.na(text)) {         warning("text NA or empty")         stop()     }
if (length(trim(text)) == 0) {         warning("text NA or empty")         stop()     }
text <- clean_data_text(text)
if (length(trim(text)) == 0)  stop("no input text")
# flog.debug(paste("predictor --> text.cleaned =", text))
dt.search.result <- colnames(c("ngram", "word", "freq", "predicted"))
dt.search.terms = as.data.table(str_split(text, " "), stringsAsFactors = FALSE)
term_count <- nrow(dt.search.terms)
if (term_count == 0) return(NULL)
term_count <- nrow(dt.search.terms)
### tweak to optimise speed     if (term_count >= 5) {             term_count <- 4     }
term_count <- nrow(dt.search.terms)
if (term_count == 0) return(NULL)
search_results_exist <- FALSE
data_found <- TRUE
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
text <- "asdf best thing asdf ddd asdad ddd "
if (is.na(text)) {         warning("text NA or empty")         stop()     }
if (length(trim(text)) == 0) {         warning("text NA or empty")         stop()     }
text <- clean_data_text(text)
if (length(trim(text)) == 0)  stop("no input text")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
text <- "asdf best thing asdf ddd asdad ddd "
if (is.na(text)) {         warning("text NA or empty")         stop()     }
if (length(trim(text)) == 0) {         warning("text NA or empty")         stop()     }
text <- clean_data_text(text)     if (length(trim(text)) == 0)  stop("no input text")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
str_get_last_word("best thing")
predictor("best thing")
txt <- "asdf best thing asdf ddd asdad ddd "
str_get_words(txt,1)
a1 <- predictor(q1, c("give", "eat", "die", "sleep")) # die
source("C:/dev/r-course/10-capstone/predictor.tests.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.tests.R", echo = TRUE, encoding = "Windows-1252")
a1 <- predictor(q1, c("give", "eat", "die", "sleep")) # die
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
get_word_stats <- function(text, ngram_size) {         flog.info(paste("starting ngram size =", ngram_size))         filt <- corpus::text_filter(stemmer = "en", drop_punct = TRUE, drop_number = TRUE, drop = corpus::stopwords_en)         ng <- term_stats(text, filt, ngrams = ngram_size, min_count = 10,,min_support = 1)         ngram <- data.table(word = unlist(ng$term), freq = unlist(ng$count))         # sqldf("create index idx_freq on ngram(freq)")         # sqldf("create index idx_word on ngram(word)")         return(ngram)     }     n1 <- parallelize_task(get_word_stats, data.stringified, 1)     n2 <- parallelize_task(get_word_stats, data.stringified, 2)     n3 <- parallelize_task(get_word_stats, data.stringified, 3)     n4 <- parallelize_task(get_word_stats, data.stringified, 4)     n5 <- parallelize_task(get_word_stats, data.stringified, 5)     save(n1, n2, n3, n4, n5, file = ngram_file_path)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
get_word_stats <- function(text, ngram_size) {         flog.info(paste("starting ngram size =", ngram_size))         filt <- corpus::text_filter(stemmer = "en", drop_punct = TRUE, drop_number = TRUE, drop = corpus::stopwords_en)         ng <- term_stats(text, filt, ngrams = ngram_size, min_count = 10,,min_support = 1)         ngram <- data.table(word = unlist(ng$term), freq = unlist(ng$count))         # sqldf("create index idx_freq on ngram(freq)")         # sqldf("create index idx_word on ngram(word)")         return(ngram)     }     n1 <- parallelize_task(get_word_stats, data.stringified, 1)     n2 <- parallelize_task(get_word_stats, data.stringified, 2)     n3 <- parallelize_task(get_word_stats, data.stringified, 3)     n4 <- parallelize_task(get_word_stats, data.stringified, 4)     n5 <- parallelize_task(get_word_stats, data.stringified, 5)     save(n1, n2, n3, n4, n5, file = ngram_file_path)     gc()
get_word_stats <- function(text, ngram_size) {         flog.info(paste("starting ngram size =", ngram_size))         filt <- corpus::text_filter(stemmer = "en", drop_punct = TRUE, drop_number = TRUE, drop = corpus::stopwords_en)         ng <- term_stats(text, filt, ngrams = ngram_size, min_count = 1,,min_support = 1)         ngram <- data.table(word = unlist(ng$term), freq = unlist(ng$count))         # sqldf("create index idx_freq on ngram(freq)")         # sqldf("create index idx_word on ngram(word)")         return(ngram)     }     n1 <- parallelize_task(get_word_stats, data.stringified, 1)     n2 <- parallelize_task(get_word_stats, data.stringified, 2)     n3 <- parallelize_task(get_word_stats, data.stringified, 3)     n4 <- parallelize_task(get_word_stats, data.stringified, 4)     n5 <- parallelize_task(get_word_stats, data.stringified, 5)     save(n1, n2, n3, n4, n5, file = ngram_file_path)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
get_word_stats <- function(text, ngram_size) {         flog.info(paste("starting ngram size =", ngram_size))         filt <- corpus::text_filter(stemmer = "en", drop_punct = TRUE, drop_number = TRUE, drop = corpus::stopwords_en)         ng <- term_stats(text, filt, ngrams = ngram_size, min_count = 1,,min_support = 1)         ngram <- data.table(word = unlist(ng$term), freq = unlist(ng$count))         # sqldf("create index idx_freq on ngram(freq)")         # sqldf("create index idx_word on ngram(word)")         return(ngram)     }     n1 <- parallelize_task(get_word_stats, data.stringified, 1)     n2 <- parallelize_task(get_word_stats, data.stringified, 2)     n3 <- parallelize_task(get_word_stats, data.stringified, 3)     n4 <- parallelize_task(get_word_stats, data.stringified, 4)     n5 <- parallelize_task(get_word_stats, data.stringified, 5)     save(n1, n2, n3, n4, n5, file = ngram_file_path)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
word_count <- function(str) {     sapply(gregexpr("\\b\\W+\\b", str, perl = TRUE), function(x) sum(x > 0)) + 1 }
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", encoding = "utf-8")
source("C:/dev/r-course/10-capstone/include.r", encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
predictor("best thing")
predictor("day weekend")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("day weekend")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("day weekend")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("day weekend")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("day weekend")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("day weekend")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("day weekend")
predictor("search engin")
predictor("search")
predictor("enjoy day yet")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor("enjoy day")
ans <- predictor("enjoy day")
ans
unlist(ans)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")
ans
unlist(ans)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")  unlist(ans)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")
unlist(ans)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")
unlist(ans)
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
ans <- predictor("enjoy day")  unlist(ans)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_3__data_clean.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
source("C:/dev/r-course/10-capstone/project_3__data_clean.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines out her cunt ☺" ans <- predictor(ttt)  unlist(ans)
 ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines" ans <- predictor(ttt)  unlist(ans)
data.all <- mutate_all(data.all, funs = tolower)
data.all <- mutate_all(data.all, funs = tolower)
data.all <- mutate_each(data.all, funs = tolower)
data.all <- mutate_all(data.all, funs = tolower)
data.all <- mutate_at(data.all, funs = tolower)
data.all <- mutate_all(data.all, funs = tolower)
data.all <- mutate_all(data.all, funs = tolower)
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
source("C:/dev/r-course/10-capstone/project_3__data_clean.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
data.all <- data.frame(lapply(data.all, function(x) (as.character(clean_data_text(x)))))
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines" ans <- predictor(ttt)  unlist(ans)
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines" ans <- clean_data_text(ttt)  unlist(ans)
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines" clean_data_text(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines" clean_data_text(ttt)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R", echo = TRUE, encoding = "Windows-1252")
ttt <- "RT @ForbesVideo: A rare glimpse inside the Miami compound of the infamous Chicago gangster, Al Capone: https://t.co/3Oo9u1YWe2 @Gertz obviously a twat that thinks the sun shines" clean_data_text(ttt) ans <- predictor(ttt)  unlist(ans)
ttt <- " a twat that thinks" clean_data_text(ttt) ans <- predictor(ttt)  unlist(ans)
sqldf("select * from n2 where word like 'think%'  order by freq desc limit 3")
ans <- predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ans <- predictor(ttt)
predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
ttt <- " a twat that" clean_data_text(ttt) predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ttt <- " a twat that" clean_data_text(ttt) predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
ttt <- " a twat that" clean_data_text(ttt) predictor(ttt)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
ttt <- "web design"
clean_data_text(ttt)
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
ttt <- "web design"
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
dt.search.result$predicted <- lapply(dt.search.result$predicted, function(x) unlist(str_get_last_word(x)))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
ttt <- "web design" clean_data_text(ttt) predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
clean_data_text(ttt)
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(ttt)
source('C:/dev/r-course/10-capstone/project_0_run.r', echo=TRUE)
predictor(ttt)
source('C:/dev/r-course/10-capstone/predictor.tests.R', echo=TRUE)
predictor(ttt)
debugSource('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
predictor(ttt)
ttt <- "web design"
clean_data_text(ttt)
predictor(ttt)
View(pred)
ttt <- "web design"
clean_data_text(ttt)
predictor(ttt)
clean_data_text(ttt)
predictor(ttt)
View(pred)
pred$word
debugSource('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
predictor(ttt)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
predictor(ttt)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
predictor(ttt)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
predictor(ttt)
source('C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/predictor.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R', echo=TRUE)
source('C:/dev/r-course/10-capstone/project_0_run.r', echo=TRUE)
source('C:/dev/r-course/10-capstone/dsci-benchmark-master/benchmark.R', echo=TRUE)
View(n3)
View(n4)
View(n5)
