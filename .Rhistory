source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
dt.search.result$predicted <- str_get_last_word(dt.search.result$predicted)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
dt.search.result <- as.data.table(dt.search.result)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
dt.search.result <- colnames("ngram", "word", "freq", "length", "predicted")
dt.search.result <- colnames(c("ngram", "word", "freq", "length", "predicted"))
dt.search.result
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
dt.search.result$predicted <- gsub("\s(\w+)$", "", dt.search.result$predicted)
dt.search.result$predicted <- gsub("\\s*\\w*$", "", dt.search.result$predicted)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
search <- "a few" search <- clean.text(search) dt.search.terms = as.data.table(str_split(search, " "), stringsAsFactors = FALSE) result <- predictor(search) result
dt.search.result <- colnames(c("ngram", "word", "freq", "length", "predicted"))
counter <-1         while (counter < term_count) {         ng_id <- term_count - (counter) + 2         result <- search_ngram(dt.search.terms[counter:term_count], ng_id)         if (nrow(result) > 0) {             msg <- paste("predictor --> ngram ", ng_id, "found", nrow(result))             flog.debug(msg)             df.row <- sqldf(paste("select word, freq, length, word as predicted from result")) #            predicted_word <- lapply(df.row[4], function(x) str_get_last_word(x))             dt.search.result <- rbind(dt.search.result, data.frame(ngram = ng_id, word = df.row[1], freq = df.row[2], length = df.row[3], predicted = df.row[4]))         }         counter <- counter + 1     }
predictor(q1)
search <- "a few" search <- clean.text(search) dt.search.terms = as.data.table(str_split(search, " "), stringsAsFactors = FALSE) result <- predictor(search) result
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
predictor(q1)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
words <- stringr::word("a few good meb")
words[length(words) - 1]
unlist(words[length(words) - 1])
words <- stringr::word("a few good meb")
words <- stringr::word("a few good meb",start = 1L)
words <- stringr::word("a few good meb",start = 1L)
words
words <- stringr::word(c("a few good meb"),start = 1L)
words
words <- stringr::word(c("a few good meb"))
words
sentences <- c("Jane saw a cat", "Jane sat down") word(sentences, 1)
sentences <- c("Jane saw a cat") word(sentences, 1)
sentences <- c("Jane saw a cat")
word(sentences, -1)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
#' Given a sentence get the last word #' #'http://stringr.tidyverse.org/reference/word.html str_get_last_word <- function(str) {     sentences <- c(str)     last <- word(sentences, -1)     last }
str_get_last_word("got me a job int he city")
class(str_get_last_word("got me a job int he city"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
result <- predictor(search)
result
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
predictor(q2)
a1 <- predictor(q1)
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
predictor(q10)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_1__setup.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
data.blogs <- read_file("data/final/en_US/en_US.blogs.txt")     data.news <- read_file("data/final/en_US/en_US.news.txt")     data.twitter <- read_file("data/final/en_US/en_US.twitter.txt")     data.blogs = iconv(data.blogs, "latin1", "ASCII", sub = "")     data.news = iconv(data.news, "latin1", "ASCII", sub = "")     data.twitter = iconv(data.twitter, "latin1", "ASCII", sub = "")
sample.blogs <- combine_samples(data.blogs, 10)
combine_samples(data.blogs,5)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
combine_samples(data.blogs,5)
y <- sample(x,.05)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
combine_samples <- function(x, size) {     y <- sample(x,.05)     size <- size - 1     while (size > 0) {         z <- smaller(x, .01)         merge(y, z)         size <- size - 1     }     y }
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
combine_samples(data.blogs,5)
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_2__data_retrieval.r", echo = TRUE, encoding = "Windows-1252")
source('C:/dev/r-course/10-capstone/project_0_run.r', echo=TRUE)
source('C:/dev/r-course/10-capstone/project_0_run.r', echo=TRUE)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
require(tau)
require(tau)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1)
predictor(q1)
predictor(q2)
predictor(q3)
predictor(q3)
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q1, c("give", "eat", "die", "sleep")))
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
dt.search.result
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
redictor(q1, c("give", "eat", "die", "sleep"))
predictor(q1, c("give", "eat", "die", "sleep"))
aa <- sqldf("select * from n1 where word in ('horticultural','financial','marital','spiritual')")
sqldf("select * from n1 where word in ('horticultural','financial','marital','spiritual')")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
### quiz hints --> choose the most frequest     if (!is.null(hints) && length(hints) > 1) {         sql <- paste0("select * from n1 where word in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "')")         flog.debug(paste("predictor --> hints sql ", sql))         sqldf(sql)         stop()     }
hints <- c("give", "eat", "die", "sleep")
sql <- paste0("select * from n1 where word in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "')")
flog.debug(paste("predictor --> hints sql ", sql))
sqldf(sql)
hints <- c("give", "eat", "die", "sleep") sql <- paste0("select * from n1 where word in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "') order by freq desc") flog.debug(paste("predictor --> hints sql ", sql)) sqldf(sql)
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness"))
predictor(q5, c("minute", "picture", "walk", "look"))
predictor(q10, c("movies", "novels", "stories", "pictures"))
predictor(q9, c("weekly", "outside", "daily", "inside"))
predictor(q8, c("center", "side", "top", "middle"))
predictor(q7, c("toe", "hand", "finger", "arm"))
predictor(q6, c("case", "account", "incident", "matter"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
sql <- paste0("select * from dt.search.result where predicted in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "') order by freq desc")         flog.debug(paste("predictor --> hints sql ", sql))         dt.found <- (sqldf(sql))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
gg <- predictor("When you breathe, I want to be the air for you. I'll be there for you, I'd live and I'd")
sql <- paste0("select * from gg where predicted in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "') order by freq desc")
flog.debug(paste("predictor --> hints sql ", sql))
dt.found <- (sqldf(sql))
gg <- as.data.table(gg)
sql <- paste0("select * from gg where predicted in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "') order by freq desc")
flog.debug(paste("predictor --> hints sql ", sql))
dt.found <- (sqldf(sql))
sql <- paste0("select * from gg where predicted in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "') order by freq desc") flog.debug(paste("predictor --> hints sql ", sql))
dt.found <- (sqldf(sql))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
gg <- predictor("When you breathe, I want to be the air for you. I'll be there for you, I'd live and I'd")
sql <- paste0("select * from gg where predicted in ('", hints[1], "' , '", hints[2], "', '", hints[3], "', '", hints[4], "') order by freq desc")
flog.debug(paste("predictor --> hints sql ", sql))
dt.found <- (sqldf(sql))
gg$predicted <- unlist(gg$predicted)
dt.found <- (sqldf(sql))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
devtools::install_github("ggrothendieck/sqldf")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
predictor(q5, c("minute", "picture", "walk", "look"))
predictor(q6, c("case", "account", "incident", "matter"))
predictor(q7, c("toe", "hand", "finger", "arm")) #####
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/project_1__setup.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q5, c("minute", "picture", "walk", "look"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q10, c("movies", "novels", "stories", "pictures"))
predictor(q8, c("center", "side", "top", "middle"))
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q6, c("case", "account", "incident", "matter"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
predictor(q5, c("minute", "picture", "walk", "look"))
predictor(q6, c("case", "account", "incident", "matter"))
predictor(q7, c("toe", "hand", "finger", "arm")) #####
predictor(q8, c("center", "side", "top", "middle"))
predictor(q9, c("weekly", "outside", "daily", "inside"))
predictor(q10, c("movies", "novels", "stories", "pictures"))
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
predictor(q5, c("minute", "picture", "walk", "look"))
predictor(q6, c("case", "account", "incident", "matter"))
predictor(q7, c("toe", "hand", "finger", "arm")) #####
predictor(q8, c("center", "side", "top", "middle"))
predictor(q9, c("weekly", "outside", "daily", "inside"))
predictor(q10, c("movies", "novels", "stories", "pictures"))
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__ngram_generation.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
devtools::install_github("ggrothendieck/sqldf")
require(sqldf)
source("C:/dev/r-course/10-capstone/project_4__ngram_generation.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q2, c("horticultural", "financial", "marital", "spiritual"))
predictor(q3, c("decade", "morning", "weekend", "month"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
predictor(q5, c("minute", "picture", "walk", "look"))
predictor(q6, c("case", "account", "incident", "matter"))
predictor(q7, c("toe", "hand", "finger", "arm")) #####
predictor(q8, c("center", "side", "top", "middle"))
predictor(q9, c("weekly", "outside", "daily", "inside"))
predictor(q10, c("movies", "novels", "stories", "pictures"))
predictor(q1, c("give", "eat", "die", "sleep"))
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) #######
predictor(q7, c("toe", "hand", "finger", "arm")) #####
predictor(q8, c("center", "side", "top", "middle")) ####
predictor(q9, c("weekly", "outside", "daily", "inside")) ####
predictor(q10, c("movies", "novels", "stories", "pictures"))
predictor(q5, c("minute", "picture", "walk", "look"))
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
predictor(q10, c("movies", "novels", "stories", "pictures")) # NOT picture
source("C:/dev/r-course/10-capstone/prediction.tests.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep")) #NOT give
predictor(q2, c("horticultural", "financial", "marital", "spiritual")) # marital
predictor(q3, c("decade", "morning", "weekend", "month")) # weekend
predictor(q4, c("hunger", "happiness", "stress", "sleepiness")) ####### stress
predictor(q5, c("minute", "picture", "walk", "look")) #picture
predictor(q6, c("case", "account", "incident", "matter")) #
predictor(q7, c("toe", "hand", "finger", "arm")) ##### hand
predictor(q8, c("center", "side", "top", "middle")) #### top
predictor(q10, c("movies", "novels", "stories", "pictures")) # NOT picture
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
p_load("corpus")
p_load("corpus")
install.packages("corpus", dependencies = TRUE)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_3__data_clean.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
tm <- term_matrix(text, ngrams = 1:3)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
tm <- term_matrix(data.stringified, ngrams = 1:3)
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
tm$p
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
matrix_corpus
matrix_corpus()
matrix_corpus <- function(text, ngram_size = 5, min_count = 5) {     f <- corpus::text_filter(stemmer = "en", drop_punct = TRUE,                              drop_number = TRUE)     stats <- corpus::term_stats(text, f, ngrams = ngram_size,                                 min_count = min_count)     x <- corpus::term_matrix(text, f, select = stats$term)     x }
tm <- matrix_corpus(data.stringified, 5,5)
data.stringified
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
text <- data.stringified
text <- data.stringified
f <- corpus::text_filter(stemmer = "en", drop_punct = TRUE, drop_number = TRUE)
stats <- corpus::term_stats(text, f, ngrams = 1:ngram_size, min_count = min_count, types = TRUE)
x <- corpus::term_matrix(text, f, select = stats$term)
stats <- corpus::term_stats(text, f, ngrams = 1:5, min_count = min_count, types = TRUE)
stats <- corpus::term_stats(text, f, ngrams = 1:5, min_count = 5, types = TRUE)
x <- corpus::term_matrix(text, f, select = stats$term)
install.packages(c("microbenchmark", "corpus", "quanteda", "text2vec", "tidytext", "tm"))
# We will use the Snowball English stop word list: stop_words <- corpus::stopwords_en
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
head(x)
xx < -term_matrix(text,ngrams = 1:5)
xx < -term_matrix(text,ngrams = 1:5)
xx <- term_matrix(text,ngrams = 1:5)
x <- corpus::term_matrix(text, f)
term_stats(text,f,ngrams = 1:3)
xx <- term_stats(text,f,ngrams = 1:3)
data <- sqldf("select term as word, count as freq from xx")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_3__data_clean.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
f <- corpus::text_filter(stemmer = "en", drop_punct = TRUE,  drop_number = TRUE, drop = stop_words)
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
text <- data.stringified
f <- corpus::text_filter(stemmer = "en", drop_punct = TRUE,  drop_number = TRUE, drop = stop_words)
ngram_size <- 5
ng <- term_stats(text, f, ngrams = ngram_size, min_count = 10)
ngram <- data.table(word = ng$term, freq = ng$count, length = ng$support))
ngram <- data.table(word = ng$term, freq = ng$count, length = ng$support)
ng <- term_stats(text, f, ngrams = ngram_size, min_count = 10,,min_support = 2)
ngram_size <- 2
f <- corpus::text_filter(stemmer = "en", drop_punct = TRUE,  drop_number = TRUE, drop = stop_words)
ng <- term_stats(text, f, ngrams = ngram_size, min_count = 10,,min_support = 2)
ng <- term_stats(text, filt, ngrams = ngram_size, min_count = 10,,min_support = 1)
ngram_size <- 2
filt <- corpus::text_filter(stemmer = "en", drop_punct = TRUE,  drop_number = TRUE, drop = stop_words)
ng <- term_stats(text, filt, ngrams = ngram_size, min_count = 10,,min_support = 1)
data.all <- parallelize_task_chunked(clean_text,data.all)
data.all <- parallelize_task_chunked(clean_text,data.all,1000)
data.all <- lapply(data.all,  function(x) {clean_text(x) })
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
data.all <- lapply(data.all,  function(x) {clean_text(x) })
data.all <- parallelize_task_chunked(clean_text,data.all,5000)
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/include.r", echo = TRUE, encoding = "utf-8")
source("C:/dev/r-course/10-capstone/project_3__data_clean.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q1, c("give", "eat", "die", "sleep")) #NOT give
source("C:/dev/r-course/10-capstone/predictor.tests.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
q1 <- "When you breathe, I want to be the air for you. I'll be there for you, I'd live and I'd"
predictor(q1, c("give", "eat", "die", "sleep")) #NOT give
predictor(q2, c("horticultural", "financial", "marital", "spiritual")) # marital
text_match(data.stringified, c("horticultural", "financial", "marital", "spiritual"))
xxx <- text_match(data.stringified, c("horticultural", "financial", "marital", "spiritual"))
xxx
yyy<- sqldf("select term, count(term) as total from xxx group by term")
predictor(q2, c("horticultural", "financial", "marital", "spiritual")) # marital
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_4__rcorpus.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
sqldf("select * from n1 where word like 'right now%'  order by freq desc limit 10 ")
sqldf("select * from n1 where word like '%right now%'  order by freq desc limit 10 ")
sqldf("select * from n2 where word like '%right now%'  order by freq desc limit 10 ")
sqldf("select * from n2 where word like 'right now%'  order by freq desc limit 10 ")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
predictor(q7, c("toe", "hand", "finger", "arm")) ##### hand
source("C:/dev/r-course/10-capstone/predictor.tests.R", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/project_0_run.r", echo = TRUE, encoding = "Windows-1252")
source("C:/dev/r-course/10-capstone/predictor.R", echo = TRUE, encoding = "Windows-1252")
